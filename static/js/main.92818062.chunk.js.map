{"version":3,"sources":["login.js","progress.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","login","bind","assertThisInitialized","document","getElementById","value","console","log","cookie","save","history","push","react_default","a","createElement","className","placeholder","id","onClick","rel","style","cursor","Component","withRouter","ProgressPage","state","progress","get_data","update_data","graph_data","_this2","axios","post","username","load","then","response","data","message","progress_data","setState","catch","error","request","_this3","points","info","_this4","dates","cum","keys","map","date_i","i","x","y","text","type","mode","_this5","react_plotly_default","layout","autosize","useResizeHandler","width","key","color","target","href","src","App","react_router_dom","react_router","component","analyticsTracking","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92818062.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport cookie from 'react-cookies';\nimport './App.css';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.login = this.login.bind(this);\n\n  }\n\n  login() {    \n    if (document.getElementById(\"username\").value === \"\")\n      return;\n    console.log(\"i gonna log you in a sec, \", document.getElementById(\"username\").value);\n    cookie.save(\"username\", document.getElementById(\"username\").value);\n    this.props.history.push(\"/progress\");\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          Username\n          <input placeholder=\"Enter your username\" id=\"username\" />\n          <br/>\n          <u>\n            <a\n              className=\"App-link\"\n              onClick={this.login}\n              rel=\"noopener noreferrer\"\n              style={{cursor: 'pointer'}}\n            >\n              Login\n            </a>\n          </u>\n        </header>\n      </div>\n    );\n  }\n  \n}\n\nexport default withRouter(Login);\n","import React, {Component} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport cookie from 'react-cookies';\nimport axios from 'axios';\nimport Plot from 'react-plotly.js';\nimport './App.css';\n\nclass ProgressPage extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      progress: {}\n    };\n\n    this.get_data = this.get_data.bind(this);\n    this.update_data = this.update_data.bind(this);\n    this.graph_data = this.graph_data.bind(this);\n\n    this.get_data();\n  }\n\n  get_data() {\n    // axios.post('http://trackmyprogress.pythonanywhere.com/loadProgress', {username: cookie.load(\"username\")})\n    axios.post('http://192.168.0.20:5000/loadProgress', {username: cookie.load(\"username\")})    \n    .then(response=>{\n      if (response.data.message===\"success\"){\n        console.log(response.data.progress_data);\n        this.setState({progress: response.data.progress_data});\n    }\n    })\n    .catch(error=>{\n      console.log(error);\n      if (error.response){   }\n      else if (error.request){   }\n      else{  }\n    })\n  }\n\n  update_data() {\n    // axios.post('http://trackmyprogress.pythonanywhere.com/updateProgress', {username: cookie.load(\"username\"), points: document.getElementById(\"points\").value, info: document.getElementById(\"info\").value})\n    axios.post('http://192.168.0.20:5000/updateProgress', {username: cookie.load(\"username\"), points: document.getElementById(\"points\").value, info: document.getElementById(\"info\").value})    \n    .then(response=>{\n      if (response.data.message===\"update successful\"){\n        console.log(response.data.message);\n        this.get_data();\n      }\n    })\n    .catch(error=>{\n      console.log(error);\n      if (error.response){   }\n      else if (error.request){   }\n      else{  }\n    })\n  }\n\n  graph_data() {\n    let points = [], info = [], dates = [], cum = 0; \n    Object.keys(this.state.progress).map((date_i,i)=>{\n      cum += this.state.progress[date_i][\"points\"];\n      points.push(cum);\n      info.push(this.state.progress[date_i][\"points\"] + \": \" + this.state.progress[date_i][\"info\"]);\n      dates.push(date_i);\n    });\n    return [\n      {\n        x: dates,\n        y: points,\n        text: info,\n        type: 'scatter',\n        mode: 'lines+points',\n      },\n    ]\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <br/>\n          Today's Progress\n          <br/>\n          <input type=\"number\" placeholder=\"Enter points\" id=\"points\" />\n          <input placeholder=\"Enter progress info\" id=\"info\" />\n          <u>\n            <a\n              className=\"App-link\"\n              onClick={this.update_data}\n              rel=\"noopener noreferrer\"\n              style={{cursor: 'pointer'}}\n            >\n              Update Progress\n            </a>\n          </u>\n          <br/><br/><br/>\n          <Plot data={this.graph_data()} layout={{autosize: true}} useResizeHandler={true} style={{width: \"80%\"}} />\n          <br/><br/><br/>\n          History: <br/>\n          <table>\n            <tr>\n              <td>Date</td>\n              <td>Points</td>\n              <td>Info</td>\n            </tr>\n            {Object.keys(this.state.progress).map((date_i,i)=>{\n              return <tr key={i}>                \n                <td>{date_i}</td> \n                <td>{this.state.progress[date_i][\"points\"]} </td>\n                <td>{this.state.progress[date_i][\"info\"]}</td>\n              </tr>\n            })}\n          </table>\n          <br/><br/><br/>\n        </header>\n        <a\n          style={{color: \"black\"}}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          href=\"https://github.com/raghavgupta0296/Track-My-Progress\"\n        >\n          <img src=\"https://cdn.iconscout.com/icon/free/png-256/github-153-675523.png\" width=\"15px\"/>\n          Github\n        </a>\n      </div>\n    );\n  }\n  \n}\n\nexport default withRouter(ProgressPage);\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Login from './login';\nimport ProgressPage from './progress';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n            <div>\n              <Route component={this.analyticsTracking} /> {/**/}\n              <Switch>\n                <Route path=\"/login\" component={Login}/>\n                <Route path=\"/progress\" component={ProgressPage}/>\n                <Route path='/' component={Login}/>\n              </Switch>\n            </div>\n          </Router>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}